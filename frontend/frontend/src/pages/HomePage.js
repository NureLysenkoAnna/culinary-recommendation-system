import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import MainHeader from '../components/MainHeader';
import { getAllRecipes, filterRecipes } from '../services/recipeService';
import { toggleFavorite } from '../services/favoriteService';
import useUserFavorites from '../services/useUserFavorites';
import RecipeSearchFilter from '../components/RecipeSearchFilter';
import RecipeCard from '../components/RecipeCard';
import '../styles/styles.css';

const HomePage = () => {
  const [recipes, setRecipes] = useState([]);
  const { isAuth, user, favorites, setFavorites } = useUserFavorites();
  const navigate = useNavigate();

  const handleSearch = async (filters) => {
    try {
      const results = await filterRecipes(filters);
      setRecipes(results);
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó:', err);
    }
  };

  useEffect(() => {
    const fetchRecipes = async () => {
      try {
        const recipeList = await getAllRecipes();
        setRecipes(recipeList);
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ä–µ—Ü–µ–ø—Ç—ñ–≤:', error);
      }
    };

    fetchRecipes();
  }, []);

  const handleToggleFavorite = async (recipeId) => {
    if (!isAuth) return;

    try {
      const recipeIdStr = recipeId.toString();
      await toggleFavorite(recipeIdStr);

      setFavorites((prev) =>
        prev.includes(recipeIdStr)
          ? prev.filter((id) => id !== recipeIdStr)
          : [...prev, recipeIdStr]
      );
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –æ–±—Ä–∞–Ω–æ–≥–æ:', error);
    }
  };

  //–û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è favorites
  if (isAuth && favorites === null) {
    return (
      <>
        <MainHeader />
        <div className="container">
          <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤...</p>
        </div>
      </>
    );
  }

  return (
    <>
      <MainHeader />
      <RecipeSearchFilter onSearch={handleSearch} />
      <div className="container">
        {!isAuth ? (
          <p>–î–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ—Ü–µ–ø—Ç–∏ –±–µ–∑ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:</p>
        ) : (
          <p>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, {user?.name}! –û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ—Ü–µ–ø—Ç–∏ –¥–ª—è –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è:</p>
        )}
        {recipes.length === 0 ? (
          <p className="empty-message">üòï –†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π –∑–∞–ø–∏—Ç.</p>
        ) : (
          <div className="recipe-grid">
            {recipes.map((r) => (
              <RecipeCard
                key={r._id}
                recipe={r}
                isAuth={isAuth}
                favorites={favorites}
                onToggleFavorite={handleToggleFavorite}
              />
            ))}
          </div>
        )}
      </div>
    </>
  );
};

export default HomePage;